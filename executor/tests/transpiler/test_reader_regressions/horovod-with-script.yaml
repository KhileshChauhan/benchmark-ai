#  Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License").
#  You may not use this file except in compliance with the License.
#  A copy of the License is located at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  or in the "license" file accompanying this file. This file is distributed
#  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
#  express or implied. See the License for the specific language governing
#  permissions and limitations under the License.
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: metrics-pusher-benchmark-job-id
  namespace: default
  labels:
    benchmark: benchmark-job-id
    action-id: ACTION_ID
    client-id: CLIENT_ID
    created-by: executor
subjects:
- kind: ServiceAccount
  name: benchmark-job-id-launcher
  namespace: default
roleRef:
  kind: Role
  name: pod-status
  apiGroup: ''
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: entrypoint-benchmark-job-id
  namespace: default
  labels:
    benchmark: benchmark-job-id
    action-id: ACTION_ID
    client-id: CLIENT_ID
    created-by: executor
data:
  entrypoint.sh: |
    #!/bin/bash
    echo 'Horovod test descriptor'
    ./deep-learning-models/models/resnet/tensorflow/train.sh 3
  puller_entrypoint.sh: |-
    #!/bin/bash
    /opt/puller/download-s3-files "$@"
---
apiVersion: kubeflow.org/v1alpha2
kind: MPIJob
metadata:
  name: benchmark-job-id
  labels:
    app: benchmark-ai
    action-id: ACTION_ID
    client-id: CLIENT_ID
    created-by: executor
spec:
  cleanPodPolicy: Running
  slotsPerWorker: 4
  mpiReplicaSpecs:
    Launcher:
      replicas: 1
      template:
        metadata:
          annotations:
            iam.amazonaws.com/role: benchmark-host
          labels:
            app: benchmark-ai
            action-id: ACTION_ID
            client-id: CLIENT_ID
            created-by: executor
        spec:
          serviceAccountName: benchmark
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - benchmark-ai
                topologyKey: kubernetes.io/hostname
          initContainers:
          - name: script-puller
            image: benchmarkai/puller:3115770
            command:
            - /bin/puller_entrypoint.sh
            volumeMounts:
            - name: entrypoints-volume
              mountPath: /bin/puller_entrypoint.sh
              readOnly: true
              subPath: puller_entrypoint.sh
            - name: scripts-volume
              mountPath: /bai/scripts
            env:
            - name: ROLE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['mpi_role_type']
            - name: S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: outputs-infrastructure
                  key: s3_endpoint
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  name: s3
                  key: access-key-id
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: s3
                  key: secret-access-key
                  optional: true
            args:
            - scripts-exchange
            - anubis/scripts1.tar,777,/bai/scripts/s0,unpack_in_place:anubis/scripts2.tar,777,/bai/scripts/s1,unpack_in_place
          containers:
          - image: user/repo:tag
            name: benchmark
            command:
            - /bin/entrypoint.sh
            volumeMounts:
            - name: entrypoints-volume
              mountPath: /bin/entrypoint.sh
              readOnly: true
              subPath: entrypoint.sh
            - name: benchmark-ai
              mountPath: /tmp/benchmark-ai
            - mountPath: /bai/scipts
              name: scripts-volume
            - name: dshm
              mountPath: /dev/shm
            env:
            - name: BENCHMARK_AI
              value: fifo
            - name: BENCHMARK_AI_FIFO_FILEPATH
              value: /tmp/benchmark-ai/fifo
            - name: BENCHMARK_AI_FIFO_MAX_WAIT_TIME
              value: '60'
            - name: BAI_SCRIPTS_PATH
              value: /bai/scripts
          volumes:
          - name: entrypoints-volume
            configMap:
              defaultMode: 0700
              name: entrypoint-benchmark-job-id
          - name: benchmark-ai
            emptyDir: {}
          - name: scripts-volume
            emptyDir: {}
          - name: dshm
            emptyDir:
              medium: Memory
          nodeSelector:
            beta.kubernetes.io/instance-type: p3.8xlarge
            node.type: bai-worker
            failure-domain.beta.kubernetes.io/zone: us-east-1a
    Worker:
      replicas: 2
      template:
        metadata:
          annotations:
            iam.amazonaws.com/role: benchmark-host
          labels:
            app: benchmark-ai
            action-id: ACTION_ID
            client-id: CLIENT_ID
            created-by: executor
        spec:
          serviceAccountName: benchmark
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - benchmark-ai
                topologyKey: kubernetes.io/hostname
          initContainers:
          - name: data-puller
            image: benchmarkai/puller:3115770
            command:
            - /bin/puller_entrypoint.sh
            volumeMounts:
            - name: entrypoints-volume
              mountPath: /bin/puller_entrypoint.sh
              readOnly: true
              subPath: puller_entrypoint.sh
            - name: datasets-volume
              mountPath: /data
            env:
            - name: ROLE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['mpi_role_type']
            - name: S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: outputs-infrastructure
                  key: s3_endpoint
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  name: s3
                  key: access-key-id
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: s3
                  key: secret-access-key
                  optional: true
            args:
            - puller-data
            - object-name/dir0,777,p0:object-name/dir1,777,p1
          - name: script-puller
            image: benchmarkai/puller:3115770
            command:
            - /bin/puller_entrypoint.sh
            volumeMounts:
            - name: entrypoints-volume
              mountPath: /bin/puller_entrypoint.sh
              readOnly: true
              subPath: puller_entrypoint.sh
            - name: scripts-volume
              mountPath: /bai/scripts
            env:
            - name: ROLE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['mpi_role_type']
            - name: S3_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: outputs-infrastructure
                  key: s3_endpoint
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  name: s3
                  key: access-key-id
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: s3
                  key: secret-access-key
                  optional: true
            args:
            - scripts-exchange
            - anubis/scripts1.tar,777,/bai/scripts/s0,unpack_in_place:anubis/scripts2.tar,777,/bai/scripts/s1,unpack_in_place
          containers:
          - image: user/repo:tag
            name: benchmark
            resources:
              limits:
                nvidia.com/gpu: 4
            volumeMounts:
            - name: entrypoints-volume
              mountPath: /bin/entrypoint.sh
              readOnly: true
              subPath: entrypoint.sh
            - name: benchmark-ai
              mountPath: /tmp/benchmark-ai
            - mountPath: /bai/scipts
              name: scripts-volume
            - name: datasets-volume
              mountPath: ~/data/tf-imagenet/train
              subPath: p0
            - name: datasets-volume
              mountPath: ~/data/tf-imagenet/validation
              subPath: p1
            - name: dshm
              mountPath: /dev/shm
            env:
            - name: BENCHMARK_AI
              value: fifo
            - name: BENCHMARK_AI_FIFO_FILEPATH
              value: /tmp/benchmark-ai/fifo
            - name: BENCHMARK_AI_FIFO_MAX_WAIT_TIME
              value: '60'
            - name: BAI_SCRIPTS_PATH
              value: /bai/scripts
          volumes:
          - name: entrypoints-volume
            configMap:
              defaultMode: 0700
              name: entrypoint-benchmark-job-id
          - name: benchmark-ai
            emptyDir: {}
          - name: scripts-volume
            emptyDir: {}
          - name: datasets-volume
            emptyDir: {}
          - name: dshm
            emptyDir:
              medium: Memory
          nodeSelector:
            beta.kubernetes.io/instance-type: p3.8xlarge
            node.type: bai-worker
            failure-domain.beta.kubernetes.io/zone: us-east-1a
